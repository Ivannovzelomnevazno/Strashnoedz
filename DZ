:/Многочлены

import java.util.HashMap;
import java.util.Scanner;
HashMap<Integer, Integer> P = new HashMap<Integer, Integer>();
        Scanner scan = new Scanner(‪System.in‬);
        int N = scan.nextInt();
        for (int i = 1; i <= N; i++) {
         Z.put(i, scan.nextInt());
        } 

        HashMap<Integer, Integer> L = new HashMap<Integer, Integer>();
        for (int i = 1; i <= N(N-1)/2; i++) {
            Q.put(i, Z.get(i)-Z.get(j));
        }

        HashMap<Integer, Integer> R = new HashMap<Integer, Integer>();
        for (int i = 0; i <= deg; i++) {
            R.put(i, P.get(i) + Q.get(i));
            System.out.print(R.get(i) + " ");
        }
    }
}


:/Перестановка отрицательных и положительных

import java.util.Arraylist;
import java.util.Scanner;
Scanner scan = new Scanner(‪System.in‬);
int n = scan.nextInt();
ArrayList<Integer> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            list.add(scan.nextInt());
        }
int i = 0;
        while(i < n){
            if(list.get(i) < 0){
                list.add(list.get(i));
                list.remove(list.get(i)); 
            }
                i++; 
        }
System.out.println(list);


:/Упорядочивания

import java.util.Arraylist;
import java.util.Scanner;
Scanner scan = new Scanner(‪System.in‬);
int n = scan.nextInt();
ArrayList<Integer> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            list.add(scan.nextInt());
        }
        for (int i = 0; i < n; i++) {
            for (int j = n - 1; j >= i; j--) {
                if (list.get(j - 1) > list.get(j)) {
                    list.set(j - 1,list.get(j - 1)+list.get(j));
                    list.set(j, list.get(j - 1) - list.get(j));
                    list.set(j - 1,list.get(j - 1)-list.get(j));
                }
            }
        }
            System.out.println(list);
    }
}
